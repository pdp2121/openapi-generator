# coding: utf-8

"""
    XRP Ledger Public API

    A JSON RPC API used to query rippled.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.account_root import AccountRoot

class TestAccountRoot(unittest.TestCase):
    """AccountRoot unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AccountRoot:
        """Test AccountRoot
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AccountRoot`
        """
        model = AccountRoot()
        if include_optional:
            return AccountRoot(
                account = '',
                account_txn_id = '',
                ammid = '',
                balance = '',
                burned_nf_tokens = 1.337,
                domain = '',
                email_hash = '',
                first_nf_token_sequence = 1.337,
                ledger_entry_type = '',
                message_key = '',
                minted_nf_tokens = 1.337,
                nf_token_minter = '',
                owner_count = 1.337,
                previous_txn_id = '',
                previous_txn_lgr_seq = 1.337,
                regular_key = '',
                sequence = 1.337,
                ticket_count = 1.337,
                tick_size = 1.337,
                transfer_rate = 1.337,
                wallet_locator = '',
                wallet_size = 1.337
            )
        else:
            return AccountRoot(
                account = '',
                ledger_entry_type = '',
                owner_count = 1.337,
                previous_txn_id = '',
                previous_txn_lgr_seq = 1.337,
                sequence = 1.337,
        )
        """

    def testAccountRoot(self):
        """Test AccountRoot"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
