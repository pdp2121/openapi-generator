# coding: utf-8

"""
    XRP Ledger Public API

    A JSON RPC API used to query rippled.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.submit_response_v1_result import SubmitResponseV1Result

class TestSubmitResponseV1Result(unittest.TestCase):
    """SubmitResponseV1Result unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SubmitResponseV1Result:
        """Test SubmitResponseV1Result
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SubmitResponseV1Result`
        """
        model = SubmitResponseV1Result()
        if include_optional:
            return SubmitResponseV1Result(
                tx_json = None,
                forwarded = True,
                status = 'error',
                warning = '',
                warnings = [
                    openapi_client.models.response_warning.ResponseWarning(
                        details = {
                            'key' : ''
                            }, 
                        id = 56, 
                        message = '', )
                    ],
                engine_result = '',
                engine_result_code = 56,
                engine_result_message = '',
                tx_blob = '',
                accepted = True,
                account_sequence_available = 1.337,
                account_sequence_next = 1.337,
                applied = True,
                broadcast = True,
                kept = True,
                queued = True,
                open_ledger_cost = '',
                validated_ledger_index = 56,
                error = '',
                request = None
            )
        else:
            return SubmitResponseV1Result(
                status = 'error',
                error = '',
                request = None,
        )
        """

    def testSubmitResponseV1Result(self):
        """Test SubmitResponseV1Result"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
