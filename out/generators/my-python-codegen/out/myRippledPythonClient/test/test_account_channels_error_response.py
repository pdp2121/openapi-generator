# coding: utf-8

"""
    XRP Ledger Public API

    A JSON RPC API used to query rippled.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.account_channels_error_response import AccountChannelsErrorResponse

class TestAccountChannelsErrorResponse(unittest.TestCase):
    """AccountChannelsErrorResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AccountChannelsErrorResponse:
        """Test AccountChannelsErrorResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AccountChannelsErrorResponse`
        """
        model = AccountChannelsErrorResponse()
        if include_optional:
            return AccountChannelsErrorResponse(
                error = '',
                status = 'error',
                request = openapi_client.models.account_channels_request.AccountChannelsRequest(
                    account = '', 
                    destination_account = '', 
                    limit = 10, 
                    marker = null, )
            )
        else:
            return AccountChannelsErrorResponse(
                error = '',
                status = 'error',
                request = openapi_client.models.account_channels_request.AccountChannelsRequest(
                    account = '', 
                    destination_account = '', 
                    limit = 10, 
                    marker = null, ),
        )
        """

    def testAccountChannelsErrorResponse(self):
        """Test AccountChannelsErrorResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
