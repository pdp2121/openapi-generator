# coding: utf-8

"""
    XRP Ledger Public API

    A JSON RPC API used to query rippled.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
from enum import Enum
from typing_extensions import Self


class UniversalErrorResponseCodes(str, Enum):
    """
    * `amendmentBlocked` - The server is amendment blocked and needs to be updated to the latest version to stay synced with the XRP Ledger network. * `failedToForward` - (Reporting Mode servers only) The server tried to forward this request to a P2P Mode server, but the connection failed. * `invalid_API_version` - The server does not support the API version number from the request. * `noClosed` - The server does not have a closed ledger, typically because it has not finished starting up. * `noCurrent` - The server does not know what the current ledger is, due to high load, network problems, validator failures, incorrect configuration, or some other problem. * `noNetwork` - The server is having trouble connecting to the rest of the XRP Ledger peer-to-peer network (and is not running in stand-alone mode). * `tooBusy` - The server is under too much load to do this command right now. Generally not returned if you are connected as an admin. * `unknownCmd` - The request does not contain a command that the rippled server recognizes. 
    """

    """
    allowed enum values
    """
    AMENDMENTBLOCKED = 'amendmentBlocked'
    FAILEDTOFORWARD = 'failedToForward'
    INVALID_API_VERSION = 'invalid_API_version'
    NOCLOSED = 'noClosed'
    NOCURRENT = 'noCurrent'
    NONETWORK = 'noNetwork'
    TOOBUSY = 'tooBusy'
    UNKNOWNCMD = 'unknownCmd'

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of UniversalErrorResponseCodes from a JSON string"""
        return cls(json.loads(json_str))


